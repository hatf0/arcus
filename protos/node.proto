
syntax = "proto3";

package scylla.node;
import "instance.proto";
import "zone.proto";
import "drive.proto";
import "nic.proto";

service NodeHandler {
	rpc QueryResource(scylla.zone.ResourceIdentifier) returns (ResourceStatus) {}
	rpc DestroyResource(scylla.zone.ResourceIdentifier) returns (DestroyReply) {}

	rpc QuerySystemResources(scylla.instance.ProvisioningInfo) returns (ResourceReply) {}
	rpc CreateInstance(scylla.instance.ProvisioningInfo) returns (scylla.zone.ResourceIdentifier) {}
	rpc RedeployInstance(scylla.zone.ResourceIdentifier) returns (scylla.instance.InstanceReply) {}
	rpc RecoverInstance(scylla.zone.ResourceIdentifier) returns (scylla.instance.InstanceReply) {}

	rpc CreateDrive(scylla.drive.Drive) returns (scylla.zone.ResourceIdentifier) {}
	rpc RedeployDrive(scylla.zone.ResourceIdentifier) returns (scylla.drive.DriveReply) {}

	rpc CreateNIC(scylla.nic.NetworkInterface) returns (scylla.nic.NICReply) {}
	rpc UpdateSecPol(scylla.nic.SecPolUpdateAction) returns (scylla.nic.NICReply) {}
	rpc AssignPublicIP(scylla.zone.ResourceIdentifier) returns (scylla.nic.NICReply) {}
	rpc AssignPrivateIP(scylla.zone.ResourceIdentifier) returns (scylla.nic.NICReply) {}

	rpc AssociateDevice(AssociationInfo) returns (AssociationReply) {}
	rpc DisassociateDevice(AssociationInfo) returns (AssociationReply) {}

	rpc GetBillableHours(scylla.zone.ResourceIdentifier) returns (stream BillableUnit) {} 
	rpc GetInstanceLog(scylla.zone.ResourceIdentifier) returns (InstanceLog) {}
}

message DestroyReply {
	int32 code = 1;
	string info = 2;
}

message ResourceStatus {
	string status = 1;
	string message_class = 2;
}

message ResourceReply {
	bool can_handle = 1;
	int32 current_vm_count = 2;
	int32 allocated_vcpus = 3;
	int32 max_vcpus = 4;
	int64 allocated_ram = 5;
	int64 max_ram = 6;
}


message LogEntry {
	int64 timestamp = 1;
	string entry = 2;
	string origin = 3;
}

message InstanceLog {
	repeated LogEntry log = 1;
}

message BillableUnit {
	int32 hourly_rate = 1;
	int64 used = 2;
	scylla.zone.ResourceIdentifier resource = 3;
}


message AssociationReply {
	int32 code = 1;
	string reply = 2;
}

message AssociationInfo {
	scylla.zone.ResourceIdentifier resource = 1;
	scylla.zone.ResourceIdentifier target = 2;
}
