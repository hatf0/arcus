doctype html
html(lang="en")
  include generic/header
  include generic/sidebar
  script
    | $(document).ready(function() {
    |     $("#nodeInfo").ajaxForm({url: "/admin/node/create", type: 'post', success: function(data) { if(data == "OK") { document.location.reload(); }}});
    | });

  script
    | $(document).ready(function() { var online = 0; var servers = [
    - foreach(i, _s; serverInterface.getDB().getAllNode())
      - if(i == serverInterface.getDB().getAllNode().length - 1)
        | 'http://#{_s.host}:#{_s.port}/ping'
      - else
        | 'http://#{_s.host}:#{_s.port}/ping',
    | ];
    | servers.forEach(function(e, i) {
    |     var r = new XMLHttpRequest();
    |     r.open('POST', e, true);
    |     r.responseType = "text";
    |     r.timeout = 2000;
    |     r.onload = function() {
    |         if(r.readyState == r.DONE) {
    |             if(r.status == 200) { 
    |                 $("#" + $(".node-status")[i].id).removeClass("bg-red").addClass("bg-green").text("online");
    |             }
    |         }
    |     };
    |     r.ontimeout = function() {
    |           $($(".node-status")[i].id).text("offline");
    |     };
    |     r.send(null);
    |   });
    | });
  script
    |!= "$(document).ready( function () {$('#clusterNodes').DataTable({'paging': true, 'lengthChange': false, 'searching': true, 'ordering': true, 'info': false, 'autoWidth': true}); $('#initializeModal').on('hidden.bs.modal', function () { location.reload();});} );"
  div.content-wrapper
    section.content-header
      h1 Nodes
        small Overview of all host nodes
    section.content
      div.row
        div.col-md-12
          div.box.box-primary
            div.box-header.with-border
              button.btn-success.btn.pull-right(type="button", data-toggle="modal", data-target="#createNodeModal")
                | Create Node
            div.box-body
              table#clusterNodes.table.table-striped.table-bordered
                thead
                  tr
                    th
                      | Hostname
                    th
                      | IP Address
                    th
                      | Status
                    th
                      | Action
                tbody
                  - foreach(i, node; serverInterface.getDB().getAllNode())
                    script
                      | $(document).ready(function () {
                      | $("##{node.name}-target").click(function() {
                      |     var n = new XMLHttpRequest();
                      |     n.open('POST', "/admin/node/#{node.name}/provision", true);
                      |     $("#initializeModalBody").append('<p id="loadingText">Provisioning..</p><i class="mdi mdi-spin mdi-loading" id="loadingIcon"></i>');
                      |     n.onload = function() {
                      |         $("#loadingText").remove();
                      |         $("#loadingIcon").remove();
                      |         if(n.status == 200) {
                      |             $("#initializeModalBody").append("<p>Done!</p>");      
                      |         }
                      |         else {
                      |             $("#initializeModalBody").append("<p>An error occured.</p>");
                      |         }
                      |     };
                      |     n.send(null);
                      | });
                      | $("##{node.name}-destroy").click(function() {window.k = new XMLHttpRequest(); window.k.open('POST', "/admin/node/#{node.name}/destroy", true);
                      | window.k.onload = function() {
                      |     if(window.k.status == 200) {
                      |         $("#areYouSureModalBody").append("<p>Done.</p>");
                      |         document.location.reload();
                      |     }
                      |     else {
                      |         $("#areYouSureModalBody").append("<p>Error occured.</p>");
                      |     }
                      | }
                      | });
                      | $("#doTheDeed").click(function (){window.k.send(null); 
                      | });
                      | });
                    tr
                      td
                        | #{node.name}
                      td.node-url
                        | #{node.host}:#{node.port}
                      td
                        - if(!node.initialized)
                          span.badge.bg-red.node-status(id="#{node.name}-status") uninitialized
                        - else
                          span.badge.bg-red.node-status(id="#{node.name}-status") unknown
                      td
                        - if(!node.initialized)
                          button.btn-default.btn(data-toggle="modal", data-target="#initializeModal", id="#{node.name}-target")
                            | Initialize
                        a.btn-default.btn(href="http://#{node.host}:#{node.port}/ui/auth")
                          | Connect
                        button.btn-danger.btn(data-toggle="modal", data-target="#areYouSureModal", id="#{node.name}-destroy")
                          | Destroy
      div#areYouSureModal.modal.modal-danger.fade
        div.modal-dialog
          div.modal-content
            div.modal-header
              button.close(type="button", data-dismiss="modal")
                span
                  | ×
              h4.modal-title
                | Confirmation
            div#areYouSureModalBody.modal-body
              h2 THIS WILL DESTROY ALL VM DATA ON THE NODE
              h3 THERE IS NO RECOVERING FROM THIS. ONLY DO THIS IF YOU ARE ABSOLUTELY CERTAIN.
            div.modal-footer
              button.btn.btn-primary.pull-left(type="button", data-dismiss="modal", data-target="#areYouSureModal")
                | Close
              button#doTheDeed.btn.btn-danger(type="button")
                | Confirm
      div#initializeModal.modal.fade
        div.modal-dialog
          div.modal-content
            div.modal-header
              button.close(type="button", data-dismiss="modal")
                span
                  | ×
              h4.modal-title
                | Provisioning
            div#initializeModalBody.modal-body
            div.modal-footer
              button.btn.btn-primary(type="button", data-dismiss="modal", data-target="#initializeModal")
                | Close
      div#createNodeModal.modal.fade
        div.modal-dialog
          div.modal-content
            div.modal-header
              button.close(type="button", data-dismiss="modal")
                span
                  | ×
              h4.modal-title
                | Create a Node
            form#nodeInfo(role="form")
              div#createNodeModalBody.modal-body
                div.form-group
                  label(for="#hostnameInput")
                    | Hostname
                  input#hostnameInput.form-control(type="text", placeholder="Enter hostname", name="hostname")
                div.form-group
                  label(for="#ipAddressInput")
                    | IP Address
                  input#ipAddressInput.form-control(type="text", placeholder="Enter IP Address/URL", name="ip")
                div.form-group
                  label(for="#portInput")
                    | Port
                  input#portInput.form-control(type="text", value="1337", name="port")
              div.modal-footer
                button.btn.btn-primary.pull-left(type="button", data-dismiss="modal", data-target="#createNodeModal")
                  | Close
                input#createNode.btn.btn-success(type="submit", value="Create")


